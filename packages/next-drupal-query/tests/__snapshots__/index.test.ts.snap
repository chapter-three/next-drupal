// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`formatData it formats data 1`] = `
Object {
  "name": "First Last",
}
`;

exports[`getData it accepts data options 1`] = `
Object {
  "author": "shadcn",
  "id": "ID",
  "title": "Title of Article",
  "type": "node--article",
}
`;

exports[`getData it accepts placeholder options 1`] = `
Object {
  "email": "name@example.com",
  "name": "shadcn",
}
`;

exports[`getData it returns data for a query 1`] = `
Object {
  "author": "shadcn",
  "id": "id",
  "title": "Title of Article",
  "type": "node--article",
}
`;

exports[`getData it returns data when both data and placeholder is defined 1`] = `
Object {
  "email": "foo@example.com",
}
`;

exports[`getData it returns formatted data if a formatter is defined 1`] = `
Object {
  "email": "foo@example.com",
  "name": "First Last",
}
`;

exports[`getData it returns placeholder data if a query does not define data 1`] = `
Object {
  "name": "shadcn",
}
`;

exports[`getParams it accepts params options 1`] = `
Object {
  "fields": Object {
    "resource": "foo,bar",
  },
  "filter": Object {},
  "include": Array [],
  "sort": Array [],
}
`;

exports[`getParams it allows params to be nested 1`] = `
Object {
  "fields": Object {},
  "filter": Object {},
  "include": "field_image,uid",
  "page": Object {
    "limit": 10,
  },
  "sort": Array [],
}
`;

exports[`getParams it returns params for a query 1`] = `
Object {
  "fields": Object {},
  "filter": Object {},
  "include": "field_image,uid",
  "sort": Array [],
}
`;
